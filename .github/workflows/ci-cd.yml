name: CI/CD

on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop, main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Make backend/gradlew executable
        run: chmod +x backend/gradlew
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
      - name: Run ktlint
        run: |
          cd backend
          ./gradlew ktlintCheck

  build-test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Backend Test
        run: |
          cd backend
          ./gradlew clean test

      - name: Frontend Test
        run: |
          cd frontend
          npm ci
          npm run test -- --browsers=ChromeHeadless --watch=false
        env:
          CI: true

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build & Push Backend
        run: |
          docker build \
            -f backend/Dockerfile.backend \
            -t ${{ secrets.DOCKER_USER }}/app-backend:${{ github.sha }} \
            backend
          docker push ${{ secrets.DOCKER_USER }}/app-backend:${{ github.sha }}

      - name: Build & Push Frontend
        run: |
          docker build \
            -f frontend/Dockerfile.frontend \
            -t ${{ secrets.DOCKER_USER }}/app-frontend:${{ github.sha }} \
            frontend
          docker push ${{ secrets.DOCKER_USER }}/app-frontend:${{ github.sha }}

  deploy:
    needs: docker
    if: github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # 1) Render-Deploy
      - name: Trigger Render Deploy
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
               -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               -H "Accept: application/json" \
               -d '{}'

      # 2) Angular Build (f√ºr Netlify)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install & Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

      # 3) Netlify Deploy
      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=frontend/dist/frontend/browser
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

